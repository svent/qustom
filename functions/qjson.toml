namespace =	"qjson"
author = "Sven Taute"
author_email = "sven.taute@gmail.com"


### value ###

[function.value]
description = "Retrieve a value from a JSON object by key"
source = '''
	function value(data, key)
	{
		start = data.indexOf("{");
		if (start < 0) return null;
		return JSON.parse(data.substring(start))[key];
	}
'''

[[function.value.tests]]
call = ''' 
data = '<syslog header> { "key": "value", "array": [ { "key": 1 }, { "key": 2, "dictionary": { "a": "Apple", "b": "Butterfly", "c": "Cat", "d": "Dog" } }, { "key": 3 } ] }';
value(data, "key") '''
expect = 'value'


### get ###

[function.get]
description = "Retrieve a value from a JSON object by path"
includes = ["lodash"]
source = '''
	function get(data, path)
	{
		start = data.indexOf("{");
		if (start < 0) return null;
		return _.get(JSON.parse(data.substring(start)), path)
	}
'''

[[function.get.tests]]
call = ''' 
data = '<syslog header> { "key": "value", "array": [ { "key": 1 }, { "key": 2, "dictionary": { "a": "Apple", "b": "Butterfly", "c": "Cat", "d": "Dog" } }, { "key": 3 } ] }';
get(data, "array[1].dictionary.b") '''
expect = 'Butterfly'


### query ###

[function.query]
description = "Retrieve a value from a JSON object using a JSONata expression"
includes = ["jsonata"]
return_type = "String"
source = '''
	function query(data, expression) {
		start = data.indexOf("{");
		if (start < 0) return null;
		var obj = JSON.parse(data.substring(start));
		var expr = jsonata(expression);
		var result = expr.evaluate(obj);
		return result;
	}
'''

[[function.query.tests]]
call = '''
data = '<syslog header> { "key": "value", "array": [ { "key": 1 }, { "key": 2, "dictionary": { "a": "Apple", "b": "Butterfly", "c": "Cat", "d": "Dog" } }, { "key": 3 } ] }';
query(data, 'array[key=2].dictionary.b');
'''
expect = 'Butterfly'

[[function.query.tests]]
call = '''
data = '<syslog header> { "example": [ {"value": 4}, {"value": 7}, {"value": 13} ] }'
query(data, "$sum(example.value)");
'''
expect = '24'

